/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20Upgradeable,
  ERC20UpgradeableInterface,
} from "../../../../../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061128c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610206578063a9059cbb14610236578063dd62ed3e14610266576100c9565b8063395093511461018857806370a08231146101b857806395d89b41146101e8576100c9565b806318160ddd116100b257806318160ddd1461011c57806323b872dd1461013a578063313ce5671461016a576100c9565b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d6610296565b6040516100e39190610d4d565b60405180910390f35b61010660048036038101906101019190610b97565b610328565b6040516101139190610d32565b60405180910390f35b61012461034b565b6040516101319190610e4f565b60405180910390f35b610154600480360381019061014f9190610b44565b610355565b6040516101619190610d32565b60405180910390f35b610172610384565b60405161017f9190610e6a565b60405180910390f35b6101a2600480360381019061019d9190610b97565b61038d565b6040516101af9190610d32565b60405180910390f35b6101d260048036038101906101cd9190610ad7565b6103c4565b6040516101df9190610e4f565b60405180910390f35b6101f061040d565b6040516101fd9190610d4d565b60405180910390f35b610220600480360381019061021b9190610b97565b61049f565b60405161022d9190610d32565b60405180910390f35b610250600480360381019061024b9190610b97565b610516565b60405161025d9190610d32565b60405180910390f35b610280600480360381019061027b9190610b04565b610539565b60405161028d9190610e4f565b60405180910390f35b6060603680546102a590610f7f565b80601f01602080910402602001604051908101604052809291908181526020018280546102d190610f7f565b801561031e5780601f106102f35761010080835404028352916020019161031e565b820191906000526020600020905b81548152906001019060200180831161030157829003601f168201915b5050505050905090565b6000806103336105c0565b90506103408185856105c8565b600191505092915050565b6000603554905090565b6000806103606105c0565b905061036d858285610793565b61037885858561081f565b60019150509392505050565b60006012905090565b6000806103986105c0565b90506103b98185856103aa8589610539565b6103b49190610ea1565b6105c8565b600191505092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606037805461041c90610f7f565b80601f016020809104026020016040519081016040528092919081815260200182805461044890610f7f565b80156104955780601f1061046a57610100808354040283529160200191610495565b820191906000526020600020905b81548152906001019060200180831161047857829003601f168201915b5050505050905090565b6000806104aa6105c0565b905060006104b88286610539565b9050838110156104fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f490610e2f565b60405180910390fd5b61050a82868684036105c8565b60019250505092915050565b6000806105216105c0565b905061052e81858561081f565b600191505092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610638576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062f90610e0f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156106a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069f90610d8f565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107869190610e4f565b60405180910390a3505050565b600061079f8484610539565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610819578181101561080b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080290610daf565b60405180910390fd5b61081884848484036105c8565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561088f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088690610def565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f690610d6f565b60405180910390fd5b61090a838383610aa3565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610991576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098890610dcf565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a269190610ea1565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a8a9190610e4f565b60405180910390a3610a9d848484610aa8565b50505050565b505050565b505050565b600081359050610abc81611228565b92915050565b600081359050610ad18161123f565b92915050565b600060208284031215610aed57610aec61100f565b5b6000610afb84828501610aad565b91505092915050565b60008060408385031215610b1b57610b1a61100f565b5b6000610b2985828601610aad565b9250506020610b3a85828601610aad565b9150509250929050565b600080600060608486031215610b5d57610b5c61100f565b5b6000610b6b86828701610aad565b9350506020610b7c86828701610aad565b9250506040610b8d86828701610ac2565b9150509250925092565b60008060408385031215610bae57610bad61100f565b5b6000610bbc85828601610aad565b9250506020610bcd85828601610ac2565b9150509250929050565b610be081610f09565b82525050565b6000610bf182610e85565b610bfb8185610e90565b9350610c0b818560208601610f4c565b610c1481611014565b840191505092915050565b6000610c2c602383610e90565b9150610c3782611025565b604082019050919050565b6000610c4f602283610e90565b9150610c5a82611074565b604082019050919050565b6000610c72601d83610e90565b9150610c7d826110c3565b602082019050919050565b6000610c95602683610e90565b9150610ca0826110ec565b604082019050919050565b6000610cb8602583610e90565b9150610cc38261113b565b604082019050919050565b6000610cdb602483610e90565b9150610ce68261118a565b604082019050919050565b6000610cfe602583610e90565b9150610d09826111d9565b604082019050919050565b610d1d81610f35565b82525050565b610d2c81610f3f565b82525050565b6000602082019050610d476000830184610bd7565b92915050565b60006020820190508181036000830152610d678184610be6565b905092915050565b60006020820190508181036000830152610d8881610c1f565b9050919050565b60006020820190508181036000830152610da881610c42565b9050919050565b60006020820190508181036000830152610dc881610c65565b9050919050565b60006020820190508181036000830152610de881610c88565b9050919050565b60006020820190508181036000830152610e0881610cab565b9050919050565b60006020820190508181036000830152610e2881610cce565b9050919050565b60006020820190508181036000830152610e4881610cf1565b9050919050565b6000602082019050610e646000830184610d14565b92915050565b6000602082019050610e7f6000830184610d23565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610eac82610f35565b9150610eb783610f35565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610eec57610eeb610fb1565b5b828201905092915050565b6000610f0282610f15565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610f6a578082015181840152602081019050610f4f565b83811115610f79576000848401525b50505050565b60006002820490506001821680610f9757607f821691505b60208210811415610fab57610faa610fe0565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61123181610ef7565b811461123c57600080fd5b50565b61124881610f35565b811461125357600080fd5b5056fea2646970667358221220b181b2cd59f56418944aab30d9862bfdb0d3e0ee7d554a639812bc641a06fcd964736f6c63430008070033";

type ERC20UpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20UpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Upgradeable__factory extends ContractFactory {
  constructor(...args: ERC20UpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20Upgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC20Upgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20Upgradeable {
    return super.attach(address) as ERC20Upgradeable;
  }
  override connect(signer: Signer): ERC20Upgradeable__factory {
    return super.connect(signer) as ERC20Upgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20UpgradeableInterface {
    return new utils.Interface(_abi) as ERC20UpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Upgradeable {
    return new Contract(address, _abi, signerOrProvider) as ERC20Upgradeable;
  }
}
