/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1363ReceiverMock,
  ERC1363ReceiverMockInterface,
} from "../../../../src/contracts/mocks/ERC1363ReceiverMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "retval",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "reverts",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onTransferReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516103f03803806103f083398101604081905261002f91610059565b600080549115156401000000000264ffffffffff1990921660e09390931c929092171790556100a5565b6000806040838503121561006c57600080fd5b82516001600160e01b03198116811461008457600080fd5b6020840151909250801515811461009a57600080fd5b809150509250929050565b61033c806100b46000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806388a7ca5c14610030575b600080fd5b61004361003e36600461016d565b610078565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200160405180910390f35b60008054640100000000900460ff16156100f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4552433133363352656365697665724d6f636b3a207468726f77696e67000000604482015260640160405180910390fd5b7f28fa6e16458f9c24aa59ddd4085264573006dbe30304837873c7deafc702b03885858585633b9aca0060405161012d959493929190610249565b60405180910390a15060005460e01b949350505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461016857600080fd5b919050565b6000806000806080858703121561018357600080fd5b61018c85610144565b935061019a60208601610144565b925060408501359150606085013567ffffffffffffffff808211156101be57600080fd5b818701915087601f8301126101d257600080fd5b8135818111156101e4576101e46102d7565b604051601f8201601f19908116603f0116810190838211818310171561020c5761020c6102d7565b816040528281528a602084870101111561022557600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff808816835260208188168185015286604085015260a06060850152855191508160a085015260005b828110156102a45786810182015185820160c001528101610288565b828111156102b657600060c084870101525b5050608083019390935250601f91909101601f19160160c001949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220aed6b2440c35853cb392a3c506ed977df0b9b7f066f87890b9f6746b48dffd3e64736f6c63430008070033";

type ERC1363ReceiverMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1363ReceiverMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1363ReceiverMock__factory extends ContractFactory {
  constructor(...args: ERC1363ReceiverMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    retval: BytesLike,
    reverts: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1363ReceiverMock> {
    return super.deploy(
      retval,
      reverts,
      overrides || {}
    ) as Promise<ERC1363ReceiverMock>;
  }
  override getDeployTransaction(
    retval: BytesLike,
    reverts: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(retval, reverts, overrides || {});
  }
  override attach(address: string): ERC1363ReceiverMock {
    return super.attach(address) as ERC1363ReceiverMock;
  }
  override connect(signer: Signer): ERC1363ReceiverMock__factory {
    return super.connect(signer) as ERC1363ReceiverMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1363ReceiverMockInterface {
    return new utils.Interface(_abi) as ERC1363ReceiverMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1363ReceiverMock {
    return new Contract(address, _abi, signerOrProvider) as ERC1363ReceiverMock;
  }
}
